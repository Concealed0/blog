<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pojo.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="cn.blog.pojo.Blog" >
    <constructor >
      <idArg column="blogId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="categoryId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="code" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="viewCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="likeCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="shareCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commentCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="imgUri" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="tags" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.blog.pojo.Blog" >
    <constructor >
      <idArg column="blogId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="categoryId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="code" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="author" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="viewCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="likeCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="shareCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="commentCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="imgUri" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="tags" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    blogId, categoryId, code, title, author, viewCount, likeCount, shareCount, commentCount, 
    imgUri, createTime, updateTime, tags
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where blogId = #{blogid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where blogId = #{blogid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.blog.pojo.Blog" >
    insert into blog (blogId, categoryId, code, 
      title, author, viewCount, 
      likeCount, shareCount, commentCount, 
      imgUri, createTime, updateTime, 
      tags, content)
    values (#{blogid,jdbcType=INTEGER}, #{categoryid,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{viewcount,jdbcType=INTEGER}, 
      #{likecount,jdbcType=INTEGER}, #{sharecount,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, 
      #{imguri,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{tags,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.blog.pojo.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogid != null" >
        blogId,
      </if>
      <if test="categoryid != null" >
        categoryId,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="viewcount != null" >
        viewCount,
      </if>
      <if test="likecount != null" >
        likeCount,
      </if>
      <if test="sharecount != null" >
        shareCount,
      </if>
      <if test="commentcount != null" >
        commentCount,
      </if>
      <if test="imguri != null" >
        imgUri,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogid != null" >
        #{blogid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null" >
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null" >
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="sharecount != null" >
        #{sharecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="imguri != null" >
        #{imguri,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.blog.pojo.Blog" >
    update blog
    <set >
      <if test="categoryid != null" >
        categoryId = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null" >
        viewCount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="sharecount != null" >
        shareCount = #{sharecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="imguri != null" >
        imgUri = #{imguri,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blogId = #{blogid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.blog.pojo.Blog" >
    update blog
    set categoryId = #{categoryid,jdbcType=INTEGER},
      code = #{code,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      viewCount = #{viewcount,jdbcType=INTEGER},
      likeCount = #{likecount,jdbcType=INTEGER},
      shareCount = #{sharecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      imgUri = #{imguri,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      tags = #{tags,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where blogId = #{blogid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.blog.pojo.Blog" >
    update blog
    set categoryId = #{categoryid,jdbcType=INTEGER},
      code = #{code,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      viewCount = #{viewcount,jdbcType=INTEGER},
      likeCount = #{likecount,jdbcType=INTEGER},
      shareCount = #{sharecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      imgUri = #{imguri,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      tags = #{tags,jdbcType=VARCHAR}
    where blogId = #{blogid,jdbcType=INTEGER}
  </update>
</mapper>